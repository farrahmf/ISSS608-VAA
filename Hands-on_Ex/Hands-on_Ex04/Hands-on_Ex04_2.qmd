---
title: "Hands-on Exercise 4(2)"
author: "farrahmf"
---

## Visualising Uncertainty

### Loading packages and importing data

```{r}
pacman::p_load(plotly, crosstalk, DT, ggiraph, ggdist, gganimate, tidyverse)

exam_data <- read_csv("data/Exam_data.csv")
```

### Visualising uncertainty of point estimates

Using **ggplot2**. First, group observations and tabulate count, mean, standard deviation and standard error for each group.

```{r}
my_sum <- exam_data %>%
  group_by(RACE) %>%
  summarise(
    n = n(),
    mean = mean(MATHS),
    sd = sd(MATHS)
  ) %>%
  mutate(se = sd/sqrt(n-1))

my_sum
```

Visualise as a table, using **kable()**.

```{r}
knitr::kable(head(my_sum), format = 'html')
```

Visualising on a chart.

```{r}
ggplot(my_sum) +
  geom_errorbar(
    aes(x=RACE, 
        ymin=mean-se, 
        ymax=mean+se), 
    width=0.2, 
    colour="black", 
    alpha=0.9, 
    size=0.5) +
  geom_point(aes
           (x=RACE, 
            y=mean), 
           stat="identity", 
           color="red",
           size = 1.5,
           alpha=1) +
  ggtitle("Standard error of mean 
          maths score by race")
```

```{r}
# for 95% confidence interval, ordered by mean

tcrit <- qnorm(0.025)

my_sum$tooltip <- c(paste0(
  "Race = ", my_sum$RACE,
  "\n N = ", my_sum$n,
  "\n Avg. Scores = ", my_sum$mean,
  "\n 95% CI: [", my_sum$mean-(tcrit*my_sum$se), " , ", my_sum$mean+(tcrit*my_sum$se), "]"
))

p <- ggplot(my_sum) +
  geom_errorbar(
    aes(x = reorder(RACE, -mean), ymin = mean-(tcrit*se), ymax = mean+(tcrit*se)),
    width = 0.2, colour = "black", alpha = 0.9, size = 0.5) +
  geom_point_interactive(
    aes(x = reorder(RACE, -mean), y = mean, tooltip = my_sum$tooltip), 
    stat = "identity", colour = "red", size = 1.5, alpha = 1) +
  ggtitle("Standard error of mean maths score by race")

girafe(ggobj = p,
       width_svg = 8,
       height_svg = 8*0.618
)
```

### Using the ggdist package

Using **stat_pointinterval()** to build a visual for displaying distribution of maths scores by race.

```{r}
exam_data %>%
  ggplot(aes(x = RACE,
             y = MATHS)) +
  stat_pointinterval() +
  labs(
    title = "Visualising confidence intervals of mean math score",
    subtitle = "Mean Point + Multiple-interval plot"
  )
```

*Note: for the below, from prof's slides, .point and .interval are ignored, replaced by point_interval per documentation however using point_interval = "median.qi" does not work. Resulting chart looks the same though.*

```{r}
exam_data %>%
  ggplot(aes(x = RACE, y = MATHS)) +
  stat_pointinterval(.width = 0.95) +
  labs(
    title = "Visualising confidence intervals of mean math score",
    subtitle = "Mean Point + Multiple-interval plot")
```

Makeover the plot on previous slide by showing 95% and 99% confidence intervals.

```{r}
exam_data %>%
  ggplot(aes(x = RACE, y = MATHS)) +
  stat_pointinterval(.width = c(0.95,0.99)) +
  labs(
    title = "Visualising confidence intervals of mean math score",
    subtitle = "Mean Point + Multiple-interval plot")
```

Using **stat_gradientinterval()** from **ggdist** package to build a visual displaying distribution of maths scores by race.

```{r}
exam_data %>%
  ggplot(aes(x = RACE, 
             y = MATHS)) +
  stat_gradientinterval(   
    fill = "skyblue",      
    show.legend = TRUE     
  ) +                        
  labs(
    title = "Visualising confidence intervals of mean math score",
    subtitle = "Gradient + interval plot")
```

### Visualising uncertainty with HOPs

(Hypothetical Outcome Plots)

*Not able to run the code and including it prevents successful rendering of website.*
